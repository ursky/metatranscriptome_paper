> library(cummeRbund)
library(cummeRbund)
install.packages("ggplot2")
install.packages("cummeRbund")
source("https://bioconductor.org/biocLite.R")
biocLite("cummeRbund")
library(cummeRbund)
library(cummeRbund)
biocLite("cummeRbund")
install.packages("RCurl")
install.packages("RCurl")
install.packages("XML")
install.packages("XML")
install.packages("XML")
source("https://bioconductor.org/biocLite.R")
install.packages("RCurl")
install.packages("XML")
install.packages("XML")
install.packages("RCurl")
source("https://bioconductor.org/biocLite.R")
biocLite("cummeRbund")
library(cummeRbund)
biocLite("cummeRbund")
install.packages("XML")
source("https://bioconductor.org/biocLite.R")
biocLite("cummeRbund")
library(cummeRbund)
install.packages("XML")
install.packages("XML")
install.packages("XML")
install.packages("XML")
install.packages("XML")
install.packages("XML")
install.packages("XML")
install.packages("XML")
install.packages("XML")
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("cummerbund")
biocLite("cummeRbund")
source("http://bioconductor.org/biocLite.R")
biocLite("cummeRbund")
biocLite("cummeRbund")
source("http://bioconductor.org/biocLite.R")
biocLite("cummeRbund")
quit()
source("http://bioconductor.org/biocLite.R")
biocLite("cummeRbund")
quit()
source("http://bioconductor.org/biocLite.R")
biocLite("cummeRbund")
biocLite("cummeRbund")
biocLite("acepack")
biocLite("cummeRbund")
biocLite("Hmisc")
biocLite("cummeRbund")
library(cummerbund)
library(cummeRbund)
quit()
source('http://bioconductor.org/biocLite.R'); biocLite("biomformat")
quit()
powers = c(c(1:10), seq(from = 12, to=20, by=2))
sft = pickSoftThreshold(datExpr, powerVector = powers, verbose = 5)
sizeGrWindow(9, 5)
par(mfrow = c(1,2));
cex1 = 0.9;
plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
xlab="Soft Threshold (power)",ylab="Scale Free Topology Model Fit,signed R^2",type="n",
main = paste("Scale independence"));
text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
labels=powers,cex=cex1,col="red");
abline(h=0.90,col="red")
plot(sft$fitIndices[,1], sft$fitIndices[,5],
xlab="Soft Threshold (power)",ylab="Mean Connectivity", type="n",
main = paste("Mean connectivity"))
text(sft$fitIndices[,1], sft$fitIndices[,5], labels=powers, cex=cex1,col="red")
library(tximportData)
library(tximport)
library(WGCNA)
options(stringsAsFactors = FALSE)
allowWGCNAThreads()
setwd("/Users/guritsk1/Desktop/RNA_SEQ_2017/virus_wgcna")
abundanceData = read.csv("dna_abundance_table.csv");
dim(abundanceData);
names(abundanceData);
datExpr = as.data.frame(t(abundanceData[, -c(1:1)]));
names(datExpr) = abundanceData$MAG;
names(datExpr)
sampleTree = hclust(dist(datExpr), method = "average");
sizeGrWindow(12,9)
par(cex = 0.6);
par(mar = c(0,4,2,0))
plot(sampleTree, main = "Sample clustering", sub="", xlab="", cex.lab = 1.5,
cex.axis = 1.5, cex.main = 2)
library(tximportData)
library(tximport)
library("DESeq2")
library("vsn")
library("RColorBrewer")
setwd("/Users/guritsk1/Desktop/RNA_SEQ_2017/DESeq2_analysis/MAG_ANALYSIS/BIN_algae")
samples <- read.table("samples.txt", header = TRUE)
names(files) <- paste0("sample", 1:6)
files <- file.path("salmon_out", samples$Dir, "quant.sf")
all(file.exists(files))
txi <- tximport(files, type = "salmon", txOut = TRUE)
names(txi)
head(txi$counts)
ddsTxi <- DESeqDataSetFromTximport(txi, colData = samples, design = ~ Time)
keep <- rowSums(counts(ddsTxi)) >= 1
dds <- ddsTxi[keep,]
